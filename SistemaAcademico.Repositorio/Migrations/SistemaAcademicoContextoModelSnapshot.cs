// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaAcademico.Repositorio.Contexto;

namespace SistemaAcademico.Repositorio.Migrations
{
    [DbContext(typeof(SistemaAcademicoContexto))]
    partial class SistemaAcademicoContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SistemaAcademico.Dominio.Entidades.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdTurma")
                        .HasColumnType("int");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("SistemaAcademico.Dominio.Entidades.Prova", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Provas");
                });

            modelBuilder.Entity("SistemaAcademico.Dominio.Entidades.ProvaAluno", b =>
                {
                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdProva")
                        .HasColumnType("int");

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("Nota")
                        .HasColumnType("double");

                    b.Property<int?>("ProvaId")
                        .HasColumnType("int");

                    b.HasKey("IdAluno", "IdProva");

                    b.HasIndex("AlunoId");

                    b.HasIndex("ProvaId");

                    b.ToTable("ProvaAlunos");
                });

            modelBuilder.Entity("SistemaAcademico.Dominio.Entidades.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("SistemaAcademico.Dominio.Entidades.Aluno", b =>
                {
                    b.HasOne("SistemaAcademico.Dominio.Entidades.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("SistemaAcademico.Dominio.Entidades.ProvaAluno", b =>
                {
                    b.HasOne("SistemaAcademico.Dominio.Entidades.Aluno", "Aluno")
                        .WithMany("ProvaAlunos")
                        .HasForeignKey("AlunoId");

                    b.HasOne("SistemaAcademico.Dominio.Entidades.Prova", "Prova")
                        .WithMany("ProvaAlunos")
                        .HasForeignKey("ProvaId");
                });
#pragma warning restore 612, 618
        }
    }
}
